{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["iOS","macOS"]}]},{"kind":"parameters","parameters":[{"name":"decoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The decoder to read data from."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer throws an error if reading from the decoder fails, or"},{"type":"text","text":" "},{"type":"text","text":"if the data read is corrupted or otherwise invalid."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/revenuecat\/paywallcolor\/colorscheme\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/RevenueCat\/documentation\/RevenueCat\/PaywallColor\/ColorScheme\/init(from:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder, when the"},{"type":"text","text":" "},{"type":"text","text":"typeâ€™s "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(from:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"init","externalID":"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:10RevenueCat12PaywallColorV0D6SchemeO","extendedModule":"Swift","modules":[{"name":"RevenueCat"}]},"hierarchy":{"paths":[["doc:\/\/RevenueCat\/documentation\/RevenueCat","doc:\/\/RevenueCat\/documentation\/RevenueCat\/PaywallColor","doc:\/\/RevenueCat\/documentation\/RevenueCat\/PaywallColor\/ColorScheme","doc:\/\/RevenueCat\/documentation\/RevenueCat\/PaywallColor\/ColorScheme\/RawRepresentable-Implementations"]]},"references":{"doc://RevenueCat/documentation/RevenueCat/PaywallColor/ColorScheme/init(from:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Creates a new instance by decoding from the given decoder, when the"},{"type":"text","text":" "},{"type":"text","text":"typeâ€™s "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" is "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"identifier":"doc:\/\/RevenueCat\/documentation\/RevenueCat\/PaywallColor\/ColorScheme\/init(from:)","kind":"symbol","type":"topic","url":"\/documentation\/revenuecat\/paywallcolor\/colorscheme\/init(from:)"},"doc://RevenueCat/documentation/RevenueCat/PaywallColor/ColorScheme":{"role":"symbol","title":"PaywallColor.ColorScheme","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ColorScheme"}],"abstract":[{"type":"text","text":"The possible color schemes, corresponding to the light and dark appearances."}],"identifier":"doc:\/\/RevenueCat\/documentation\/RevenueCat\/PaywallColor\/ColorScheme","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ColorScheme"}],"url":"\/documentation\/revenuecat\/paywallcolor\/colorscheme"},"doc://RevenueCat/documentation/RevenueCat/PaywallColor":{"role":"symbol","title":"PaywallColor","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PaywallColor"}],"abstract":[{"type":"text","text":"Represents a color to be used by "},{"type":"codeVoice","code":"RevenueCatUI"}],"identifier":"doc:\/\/RevenueCat\/documentation\/RevenueCat\/PaywallColor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PaywallColor"}],"url":"\/documentation\/revenuecat\/paywallcolor"},"doc://RevenueCat/documentation/RevenueCat":{"role":"collection","title":"RevenueCat","abstract":[{"type":"text","text":"ðŸ˜» In-App Subscriptions Made Easy ðŸ˜»"}],"identifier":"doc:\/\/RevenueCat\/documentation\/RevenueCat","kind":"symbol","type":"topic","url":"\/documentation\/revenuecat"},"doc://RevenueCat/documentation/RevenueCat/PaywallColor/ColorScheme/RawRepresentable-Implementations":{"role":"collectionGroup","title":"RawRepresentable Implementations","abstract":[],"identifier":"doc:\/\/RevenueCat\/documentation\/RevenueCat\/PaywallColor\/ColorScheme\/RawRepresentable-Implementations","kind":"article","type":"topic","url":"\/documentation\/revenuecat\/paywallcolor\/colorscheme\/rawrepresentable-implementations"}}}